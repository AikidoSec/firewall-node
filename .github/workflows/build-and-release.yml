name: Build and release
on:
  release:
    types: [created]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    timeout-minutes: 15
    services:
      s3:
        image: adobe/s3mock
        env:
          "initialBuckets": "bucket"
        ports:
          - "9090:9090"
      mongodb:
        image: mongo:5
        env:
          "MONGO_INITDB_ROOT_USERNAME": "root"
          "MONGO_INITDB_ROOT_PASSWORD": "password"
        ports:
          - 27017:27017
      postgres:
        image: postgres:14-alpine
        env:
          "POSTGRES_PASSWORD": "password"
          "POSTGRES_USER": "root"
          "POSTGRES_DB": "main_db"
        ports:
          - "27016:5432"
      mysql:
        image: mysql:8.0
        # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
        # We need to use this long command in order to execute the last part : mysql_native_password
        # https://stackoverflow.com/questions/60902904/how-to-pass-mysql-native-password-to-mysql-service-in-github-actions
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5 -e MYSQL_ROOT_PASSWORD=mypassword -e MYSQL_DATABASE=catsdb --entrypoint sh mysql:8.0 -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"
        ports:
          - "27015:3306"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
          scope: "@aikidosec"
      - run: make install
      - name: Get the version
        id: get_version
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
      - run: cd library && npm --no-git-tag-version version ${{ steps.get_version.outputs.tag }}
      - run: make build
      - run: make lint
      - run: make test-ci
      - run: make end2end
      - run: cd build && npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
