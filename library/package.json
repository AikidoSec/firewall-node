{
  "name": "@aikidosec/firewall",
  "version": "0.0.0",
  "description": "Aikido firewall protects your application against NoSQL injections and more",
  "repository": "https://github.com/AikidoSec/firewall-node",
  "keywords": [
    "security",
    "nosql",
    "injection",
    "sql",
    "mongodb",
    "mysql",
    "mysql2",
    "mariadb",
    "pubsub",
    "postgres",
    "express",
    "rasp",
    "firewall",
    "aikido",
    "guard",
    "firewall",
    "runtime",
    "protection",
    "threats",
    "owasp"
  ],
  "license": "AGPL-3.0-or-later",
  "main": "index.js",
  "types": "index.d.ts",
  "engines": {
    "node": ">=16"
  },
  "devDependencies": {
    "@google-cloud/functions-framework": "^3.3.0",
    "@google-cloud/pubsub": "^4.3.3",
    "@hapi/hapi": "^21.3.10",
    "@sinonjs/fake-timers": "^11.2.2",
    "@types/aws-lambda": "^8.10.131",
    "@types/cookie-parser": "^1.4.6",
    "@types/express": "^4.17.21",
    "@types/ip": "^1.1.3",
    "@types/mysql": "^2.15.25",
    "@types/node": "^20.11.5",
    "@types/pg": "^8.11.0",
    "@types/qs": "^6.9.11",
    "@types/shell-quote": "^1.7.5",
    "@types/sinonjs__fake-timers": "^8.1.5",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^6.19.0",
    "@typescript-eslint/parser": "^6.19.0",
    "aws-sdk": "^2.1595.0",
    "cookie-parser": "^1.4.6",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-prettier": "^5.1.3",
    "express": "^4.19.2",
    "express-async-handler": "^1.2.0",
    "graphql": "^16.8.2",
    "hono": "^4.4.2",
    "mongodb": "^6.3.0",
    "mysql": "^2.18.1",
    "mysql2": "^3.10.0",
    "percentile": "^1.6.0",
    "pg": "^8.11.3",
    "prettier": "^3.2.4",
    "shell-quote": "^1.8.1",
    "sqlite3": "^5.1.7",
    "supertest": "^6.3.4",
    "tap": "^18.6.1",
    "typescript": "^5.3.3",
    "undici": "^6.12.0",
    "xml2js": "^0.6.2"
  },
  "scripts": {
    "test": "tap --allow-incomplete-coverage",
    "test:ci": "tap --coverage-report=lcov --allow-incomplete-coverage",
    "build": "tsc",
    "build:watch": "tsc --watch",
    "lint": "npm run lint-eslint && npm run lint-tsc",
    "lint-eslint": "eslint '**/*.ts'",
    "lint-tsc": "tsc --noEmit"
  }
}
